name: Build and Release iOS App

on:
  push:
    tags:
      - 'v*' # Triggers the workflow when you push a tag like v1.0.0
  workflow_dispatch: # Allows you to manually trigger the workflow

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: flutter pub get

      # Step 4: Build the iOS app
      - name: Build iOS Release
        run: flutter build ios --release --no-codesign

      # Step 5: Archive the app into an IPA (Optional if automated signing is not set up)
      - name: Generate IPA File
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
                     -scheme Runner \
                     -sdk iphoneos \
                     -configuration Release \
                     archive -archivePath build/Runner.xcarchive
          xcodebuild -exportArchive \
                     -archivePath build/Runner.xcarchive \
                     -exportPath build/Runner.ipa \
                     -exportOptionsPlist ios/exportOptions.plist

      # Step 6: Upload IPA as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ steps.create_release.outputs.id }}
          asset_path: build/Runner.ipa/Runner.ipa
          asset_name: Runner.ipa
          asset_content_type: application/octet-stream

  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
